generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(cuid()) @map("_id")
  name           String?
  email          String?   @unique
  hashedPassword String
  userRole       UserRole  @default(READ_ONLY)
  createdAt      DateTime  @default(now()) @map("created_at")
  updatedAt      DateTime  @updatedAt @map("updated_at")
  accounts       Account[]
  nurseries      Nursery?
}

model Account {
  id                String  @id @default(cuid()) @map("_id")
  userId            String
  type              String
  provider          String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  providerAccountId String
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId], map: "Account_userId_fkey")
}

model Species {
  id              String   @id @default(cuid())
  name            String
  description     String
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @updatedAt @map("updated_at")
  availableStatus Boolean  @default(true) @map("available_status")
  images          Image[]
}

model Nursery {
  id        String   @id @default(cuid()) @map("_id")
  name      String
  address   String?
  phone     String?
  email     String?
  website   String?
  logoSrc   String?
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  ownerId   String   @unique @map("owner_id")
  owner     User     @relation(fields: [ownerId], references: [id], onDelete: Cascade)
}

model Image {
  id        String  @id @default(cuid())
  url       String
  speciesId String  @map("species_id")
  species   Species @relation(fields: [speciesId], references: [id])

  @@index([speciesId], map: "Image_species_id_fkey")
}

enum UserRole {
  SPECIES_ADMIN
  NURSERY_ADMIN
  ADMIN
  READ_ONLY
}
